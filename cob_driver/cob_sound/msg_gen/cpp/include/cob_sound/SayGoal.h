/* Auto-generated by genmsg_cpp for file /home/reza/git/care-o-bot/cob_driver/cob_sound/msg/SayGoal.msg */
#ifndef COB_SOUND_MESSAGE_SAYGOAL_H
#define COB_SOUND_MESSAGE_SAYGOAL_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "std_msgs/String.h"

namespace cob_sound
{
template <class ContainerAllocator>
struct SayGoal_ : public ros::Message
{
  typedef SayGoal_<ContainerAllocator> Type;

  SayGoal_()
  : text()
  {
  }

  SayGoal_(const ContainerAllocator& _alloc)
  : text(_alloc)
  {
  }

  typedef  ::std_msgs::String_<ContainerAllocator>  _text_type;
   ::std_msgs::String_<ContainerAllocator>  text;


private:
  static const char* __s_getDataType_() { return "cob_sound/SayGoal"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "7fb91077b93c329c9eeaea1c488c03e0"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
# goal\n\
std_msgs/String text\n\
\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, text);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, text);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(text);
    return size;
  }

  typedef boost::shared_ptr< ::cob_sound::SayGoal_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cob_sound::SayGoal_<ContainerAllocator>  const> ConstPtr;
}; // struct SayGoal
typedef  ::cob_sound::SayGoal_<std::allocator<void> > SayGoal;

typedef boost::shared_ptr< ::cob_sound::SayGoal> SayGoalPtr;
typedef boost::shared_ptr< ::cob_sound::SayGoal const> SayGoalConstPtr;


template<typename ContainerAllocator>
std::ostream& operator<<(std::ostream& s, const  ::cob_sound::SayGoal_<ContainerAllocator> & v)
{
  ros::message_operations::Printer< ::cob_sound::SayGoal_<ContainerAllocator> >::stream(s, "", v);
  return s;}

} // namespace cob_sound

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::cob_sound::SayGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "7fb91077b93c329c9eeaea1c488c03e0";
  }

  static const char* value(const  ::cob_sound::SayGoal_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x7fb91077b93c329cULL;
  static const uint64_t static_value2 = 0x9eeaea1c488c03e0ULL;
};

template<class ContainerAllocator>
struct DataType< ::cob_sound::SayGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_sound/SayGoal";
  }

  static const char* value(const  ::cob_sound::SayGoal_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::cob_sound::SayGoal_<ContainerAllocator> > {
  static const char* value() 
  {
    return "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======\n\
# goal\n\
std_msgs/String text\n\
\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
\n\
";
  }

  static const char* value(const  ::cob_sound::SayGoal_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::cob_sound::SayGoal_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.text);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SayGoal_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace message_operations
{

template<class ContainerAllocator>
struct Printer< ::cob_sound::SayGoal_<ContainerAllocator> >
{
  template<typename Stream> static void stream(Stream& s, const std::string& indent, const  ::cob_sound::SayGoal_<ContainerAllocator> & v) 
  {
    s << indent << "text: ";
s << std::endl;
    Printer< ::std_msgs::String_<ContainerAllocator> >::stream(s, indent + "  ", v.text);
  }
};


} // namespace message_operations
} // namespace ros

#endif // COB_SOUND_MESSAGE_SAYGOAL_H

