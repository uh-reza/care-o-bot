/* Auto-generated by genmsg_cpp for file /home/reza/git/care-o-bot/cob_driver/cob_sound/srv/SayText.srv */
#ifndef COB_SOUND_SERVICE_SAYTEXT_H
#define COB_SOUND_SERVICE_SAYTEXT_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"




namespace cob_sound
{
template <class ContainerAllocator>
struct SayTextRequest_ : public ros::Message
{
  typedef SayTextRequest_<ContainerAllocator> Type;

  SayTextRequest_()
  : text()
  {
  }

  SayTextRequest_(const ContainerAllocator& _alloc)
  : text(_alloc)
  {
  }

  typedef std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  _text_type;
  std::basic_string<char, std::char_traits<char>, typename ContainerAllocator::template rebind<char>::other >  text;


private:
  static const char* __s_getDataType_() { return "cob_sound/SayTextRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "74697ed3d931f6eede8bf3a8dfeca160"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "74697ed3d931f6eede8bf3a8dfeca160"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "string text\n\
\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, text);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, text);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(text);
    return size;
  }

  typedef boost::shared_ptr< ::cob_sound::SayTextRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cob_sound::SayTextRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct SayTextRequest
typedef  ::cob_sound::SayTextRequest_<std::allocator<void> > SayTextRequest;

typedef boost::shared_ptr< ::cob_sound::SayTextRequest> SayTextRequestPtr;
typedef boost::shared_ptr< ::cob_sound::SayTextRequest const> SayTextRequestConstPtr;


template <class ContainerAllocator>
struct SayTextResponse_ : public ros::Message
{
  typedef SayTextResponse_<ContainerAllocator> Type;

  SayTextResponse_()
  {
  }

  SayTextResponse_(const ContainerAllocator& _alloc)
  {
  }


private:
  static const char* __s_getDataType_() { return "cob_sound/SayTextResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "d41d8cd98f00b204e9800998ecf8427e"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "74697ed3d931f6eede8bf3a8dfeca160"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    return size;
  }

  typedef boost::shared_ptr< ::cob_sound::SayTextResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cob_sound::SayTextResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct SayTextResponse
typedef  ::cob_sound::SayTextResponse_<std::allocator<void> > SayTextResponse;

typedef boost::shared_ptr< ::cob_sound::SayTextResponse> SayTextResponsePtr;
typedef boost::shared_ptr< ::cob_sound::SayTextResponse const> SayTextResponseConstPtr;

struct SayText
{

typedef SayTextRequest Request;
typedef SayTextResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SayText
} // namespace cob_sound

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::cob_sound::SayTextRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "74697ed3d931f6eede8bf3a8dfeca160";
  }

  static const char* value(const  ::cob_sound::SayTextRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0x74697ed3d931f6eeULL;
  static const uint64_t static_value2 = 0xde8bf3a8dfeca160ULL;
};

template<class ContainerAllocator>
struct DataType< ::cob_sound::SayTextRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_sound/SayTextRequest";
  }

  static const char* value(const  ::cob_sound::SayTextRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::cob_sound::SayTextRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "string text\n\
\n\
\n\
";
  }

  static const char* value(const  ::cob_sound::SayTextRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::cob_sound::SayTextResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "d41d8cd98f00b204e9800998ecf8427e";
  }

  static const char* value(const  ::cob_sound::SayTextResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xd41d8cd98f00b204ULL;
  static const uint64_t static_value2 = 0xe9800998ecf8427eULL;
};

template<class ContainerAllocator>
struct DataType< ::cob_sound::SayTextResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_sound/SayTextResponse";
  }

  static const char* value(const  ::cob_sound::SayTextResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::cob_sound::SayTextResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "\n\
";
  }

  static const char* value(const  ::cob_sound::SayTextResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::cob_sound::SayTextResponse_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::cob_sound::SayTextRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.text);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SayTextRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::cob_sound::SayTextResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SayTextResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<cob_sound::SayText> {
  static const char* value() 
  {
    return "74697ed3d931f6eede8bf3a8dfeca160";
  }

  static const char* value(const cob_sound::SayText&) { return value(); } 
};

template<>
struct DataType<cob_sound::SayText> {
  static const char* value() 
  {
    return "cob_sound/SayText";
  }

  static const char* value(const cob_sound::SayText&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<cob_sound::SayTextRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "74697ed3d931f6eede8bf3a8dfeca160";
  }

  static const char* value(const cob_sound::SayTextRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<cob_sound::SayTextRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_sound/SayText";
  }

  static const char* value(const cob_sound::SayTextRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<cob_sound::SayTextResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "74697ed3d931f6eede8bf3a8dfeca160";
  }

  static const char* value(const cob_sound::SayTextResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<cob_sound::SayTextResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_sound/SayText";
  }

  static const char* value(const cob_sound::SayTextResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COB_SOUND_SERVICE_SAYTEXT_H

