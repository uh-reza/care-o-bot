/* Auto-generated by genmsg_cpp for file /home/reza/git/care-o-bot/cob_common/cob_srvs/srv/SetOperationMode.srv */
#ifndef COB_SRVS_SERVICE_SETOPERATIONMODE_H
#define COB_SRVS_SERVICE_SETOPERATIONMODE_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"

#include "std_msgs/String.h"


#include "std_msgs/Bool.h"
#include "std_msgs/String.h"

namespace cob_srvs
{
template <class ContainerAllocator>
struct SetOperationModeRequest_ : public ros::Message
{
  typedef SetOperationModeRequest_<ContainerAllocator> Type;

  SetOperationModeRequest_()
  : operation_mode()
  {
  }

  SetOperationModeRequest_(const ContainerAllocator& _alloc)
  : operation_mode(_alloc)
  {
  }

  typedef  ::std_msgs::String_<ContainerAllocator>  _operation_mode_type;
   ::std_msgs::String_<ContainerAllocator>  operation_mode;


private:
  static const char* __s_getDataType_() { return "cob_srvs/SetOperationModeRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "df954cef597fce5b749fee53c7846c40"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "588a6152f0ed57d725118cc82be8479a"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "std_msgs/String operation_mode\n\
\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, operation_mode);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, operation_mode);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(operation_mode);
    return size;
  }

  typedef boost::shared_ptr< ::cob_srvs::SetOperationModeRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cob_srvs::SetOperationModeRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct SetOperationModeRequest
typedef  ::cob_srvs::SetOperationModeRequest_<std::allocator<void> > SetOperationModeRequest;

typedef boost::shared_ptr< ::cob_srvs::SetOperationModeRequest> SetOperationModeRequestPtr;
typedef boost::shared_ptr< ::cob_srvs::SetOperationModeRequest const> SetOperationModeRequestConstPtr;


template <class ContainerAllocator>
struct SetOperationModeResponse_ : public ros::Message
{
  typedef SetOperationModeResponse_<ContainerAllocator> Type;

  SetOperationModeResponse_()
  : success()
  , error_message()
  {
  }

  SetOperationModeResponse_(const ContainerAllocator& _alloc)
  : success(_alloc)
  , error_message(_alloc)
  {
  }

  typedef  ::std_msgs::Bool_<ContainerAllocator>  _success_type;
   ::std_msgs::Bool_<ContainerAllocator>  success;

  typedef  ::std_msgs::String_<ContainerAllocator>  _error_message_type;
   ::std_msgs::String_<ContainerAllocator>  error_message;


private:
  static const char* __s_getDataType_() { return "cob_srvs/SetOperationModeResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "bdad515e8f4c013bd650d3407753d2b8"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "588a6152f0ed57d725118cc82be8479a"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "std_msgs/Bool success\n\
std_msgs/String error_message\n\
\n\
\n\
================================================================================\n\
MSG: std_msgs/Bool\n\
bool data\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, success);
    ros::serialization::serialize(stream, error_message);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, success);
    ros::serialization::deserialize(stream, error_message);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(success);
    size += ros::serialization::serializationLength(error_message);
    return size;
  }

  typedef boost::shared_ptr< ::cob_srvs::SetOperationModeResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cob_srvs::SetOperationModeResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct SetOperationModeResponse
typedef  ::cob_srvs::SetOperationModeResponse_<std::allocator<void> > SetOperationModeResponse;

typedef boost::shared_ptr< ::cob_srvs::SetOperationModeResponse> SetOperationModeResponsePtr;
typedef boost::shared_ptr< ::cob_srvs::SetOperationModeResponse const> SetOperationModeResponseConstPtr;

struct SetOperationMode
{

typedef SetOperationModeRequest Request;
typedef SetOperationModeResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetOperationMode
} // namespace cob_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::cob_srvs::SetOperationModeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "df954cef597fce5b749fee53c7846c40";
  }

  static const char* value(const  ::cob_srvs::SetOperationModeRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xdf954cef597fce5bULL;
  static const uint64_t static_value2 = 0x749fee53c7846c40ULL;
};

template<class ContainerAllocator>
struct DataType< ::cob_srvs::SetOperationModeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_srvs/SetOperationModeRequest";
  }

  static const char* value(const  ::cob_srvs::SetOperationModeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::cob_srvs::SetOperationModeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "std_msgs/String operation_mode\n\
\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
\n\
";
  }

  static const char* value(const  ::cob_srvs::SetOperationModeRequest_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::cob_srvs::SetOperationModeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bdad515e8f4c013bd650d3407753d2b8";
  }

  static const char* value(const  ::cob_srvs::SetOperationModeResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xbdad515e8f4c013bULL;
  static const uint64_t static_value2 = 0xd650d3407753d2b8ULL;
};

template<class ContainerAllocator>
struct DataType< ::cob_srvs::SetOperationModeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_srvs/SetOperationModeResponse";
  }

  static const char* value(const  ::cob_srvs::SetOperationModeResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::cob_srvs::SetOperationModeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "std_msgs/Bool success\n\
std_msgs/String error_message\n\
\n\
\n\
================================================================================\n\
MSG: std_msgs/Bool\n\
bool data\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
\n\
";
  }

  static const char* value(const  ::cob_srvs::SetOperationModeResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::cob_srvs::SetOperationModeRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.operation_mode);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetOperationModeRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::cob_srvs::SetOperationModeResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
    stream.next(m.error_message);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetOperationModeResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<cob_srvs::SetOperationMode> {
  static const char* value() 
  {
    return "588a6152f0ed57d725118cc82be8479a";
  }

  static const char* value(const cob_srvs::SetOperationMode&) { return value(); } 
};

template<>
struct DataType<cob_srvs::SetOperationMode> {
  static const char* value() 
  {
    return "cob_srvs/SetOperationMode";
  }

  static const char* value(const cob_srvs::SetOperationMode&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<cob_srvs::SetOperationModeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "588a6152f0ed57d725118cc82be8479a";
  }

  static const char* value(const cob_srvs::SetOperationModeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<cob_srvs::SetOperationModeRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_srvs/SetOperationMode";
  }

  static const char* value(const cob_srvs::SetOperationModeRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<cob_srvs::SetOperationModeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "588a6152f0ed57d725118cc82be8479a";
  }

  static const char* value(const cob_srvs::SetOperationModeResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<cob_srvs::SetOperationModeResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_srvs/SetOperationMode";
  }

  static const char* value(const cob_srvs::SetOperationModeResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COB_SRVS_SERVICE_SETOPERATIONMODE_H

