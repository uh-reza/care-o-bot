/* Auto-generated by genmsg_cpp for file /home/reza/git/care-o-bot/cob_common/cob_srvs/srv/SetMaxVel.srv */
#ifndef COB_SRVS_SERVICE_SETMAXVEL_H
#define COB_SRVS_SERVICE_SETMAXVEL_H
#include <string>
#include <vector>
#include <ostream>
#include "ros/serialization.h"
#include "ros/builtin_message_traits.h"
#include "ros/message_operations.h"
#include "ros/message.h"
#include "ros/time.h"

#include "ros/service_traits.h"



#include "std_msgs/String.h"

namespace cob_srvs
{
template <class ContainerAllocator>
struct SetMaxVelRequest_ : public ros::Message
{
  typedef SetMaxVelRequest_<ContainerAllocator> Type;

  SetMaxVelRequest_()
  : max_vel(0.0)
  {
  }

  SetMaxVelRequest_(const ContainerAllocator& _alloc)
  : max_vel(0.0)
  {
  }

  typedef float _max_vel_type;
  float max_vel;


private:
  static const char* __s_getDataType_() { return "cob_srvs/SetMaxVelRequest"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "dd4c36ffe76b55c7212cbc93d9e269be"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "5212ea5f4e683819f4e395ad0eb8ae8c"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "float32 max_vel\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, max_vel);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, max_vel);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(max_vel);
    return size;
  }

  typedef boost::shared_ptr< ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cob_srvs::SetMaxVelRequest_<ContainerAllocator>  const> ConstPtr;
}; // struct SetMaxVelRequest
typedef  ::cob_srvs::SetMaxVelRequest_<std::allocator<void> > SetMaxVelRequest;

typedef boost::shared_ptr< ::cob_srvs::SetMaxVelRequest> SetMaxVelRequestPtr;
typedef boost::shared_ptr< ::cob_srvs::SetMaxVelRequest const> SetMaxVelRequestConstPtr;


template <class ContainerAllocator>
struct SetMaxVelResponse_ : public ros::Message
{
  typedef SetMaxVelResponse_<ContainerAllocator> Type;

  SetMaxVelResponse_()
  : success(false)
  , errorMessage()
  {
  }

  SetMaxVelResponse_(const ContainerAllocator& _alloc)
  : success(false)
  , errorMessage(_alloc)
  {
  }

  typedef uint8_t _success_type;
  uint8_t success;

  typedef  ::std_msgs::String_<ContainerAllocator>  _errorMessage_type;
   ::std_msgs::String_<ContainerAllocator>  errorMessage;


private:
  static const char* __s_getDataType_() { return "cob_srvs/SetMaxVelResponse"; }
public:
  ROS_DEPRECATED static const std::string __s_getDataType() { return __s_getDataType_(); }

  ROS_DEPRECATED const std::string __getDataType() const { return __s_getDataType_(); }

private:
  static const char* __s_getMD5Sum_() { return "c3b62f691308002270bd6702fd7da94b"; }
public:
  ROS_DEPRECATED static const std::string __s_getMD5Sum() { return __s_getMD5Sum_(); }

  ROS_DEPRECATED const std::string __getMD5Sum() const { return __s_getMD5Sum_(); }

private:
  static const char* __s_getServerMD5Sum_() { return "5212ea5f4e683819f4e395ad0eb8ae8c"; }
public:
  ROS_DEPRECATED static const std::string __s_getServerMD5Sum() { return __s_getServerMD5Sum_(); }

  ROS_DEPRECATED const std::string __getServerMD5Sum() const { return __s_getServerMD5Sum_(); }

private:
  static const char* __s_getMessageDefinition_() { return "bool success\n\
std_msgs/String errorMessage\n\
\n\
\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
\n\
"; }
public:
  ROS_DEPRECATED static const std::string __s_getMessageDefinition() { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED const std::string __getMessageDefinition() const { return __s_getMessageDefinition_(); }

  ROS_DEPRECATED virtual uint8_t *serialize(uint8_t *write_ptr, uint32_t seq) const
  {
    ros::serialization::OStream stream(write_ptr, 1000000000);
    ros::serialization::serialize(stream, success);
    ros::serialization::serialize(stream, errorMessage);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint8_t *deserialize(uint8_t *read_ptr)
  {
    ros::serialization::IStream stream(read_ptr, 1000000000);
    ros::serialization::deserialize(stream, success);
    ros::serialization::deserialize(stream, errorMessage);
    return stream.getData();
  }

  ROS_DEPRECATED virtual uint32_t serializationLength() const
  {
    uint32_t size = 0;
    size += ros::serialization::serializationLength(success);
    size += ros::serialization::serializationLength(errorMessage);
    return size;
  }

  typedef boost::shared_ptr< ::cob_srvs::SetMaxVelResponse_<ContainerAllocator> > Ptr;
  typedef boost::shared_ptr< ::cob_srvs::SetMaxVelResponse_<ContainerAllocator>  const> ConstPtr;
}; // struct SetMaxVelResponse
typedef  ::cob_srvs::SetMaxVelResponse_<std::allocator<void> > SetMaxVelResponse;

typedef boost::shared_ptr< ::cob_srvs::SetMaxVelResponse> SetMaxVelResponsePtr;
typedef boost::shared_ptr< ::cob_srvs::SetMaxVelResponse const> SetMaxVelResponseConstPtr;

struct SetMaxVel
{

typedef SetMaxVelRequest Request;
typedef SetMaxVelResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;
}; // struct SetMaxVel
} // namespace cob_srvs

namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "dd4c36ffe76b55c7212cbc93d9e269be";
  }

  static const char* value(const  ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xdd4c36ffe76b55c7ULL;
  static const uint64_t static_value2 = 0x212cbc93d9e269beULL;
};

template<class ContainerAllocator>
struct DataType< ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_srvs/SetMaxVelRequest";
  }

  static const char* value(const  ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "float32 max_vel\n\
\n\
";
  }

  static const char* value(const  ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator> struct IsFixedSize< ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> > : public TrueType {};
} // namespace message_traits
} // namespace ros


namespace ros
{
namespace message_traits
{
template<class ContainerAllocator>
struct MD5Sum< ::cob_srvs::SetMaxVelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "c3b62f691308002270bd6702fd7da94b";
  }

  static const char* value(const  ::cob_srvs::SetMaxVelResponse_<ContainerAllocator> &) { return value(); } 
  static const uint64_t static_value1 = 0xc3b62f6913080022ULL;
  static const uint64_t static_value2 = 0x70bd6702fd7da94bULL;
};

template<class ContainerAllocator>
struct DataType< ::cob_srvs::SetMaxVelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_srvs/SetMaxVelResponse";
  }

  static const char* value(const  ::cob_srvs::SetMaxVelResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct Definition< ::cob_srvs::SetMaxVelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "bool success\n\
std_msgs/String errorMessage\n\
\n\
\n\
================================================================================\n\
MSG: std_msgs/String\n\
string data\n\
\n\
";
  }

  static const char* value(const  ::cob_srvs::SetMaxVelResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace message_traits
} // namespace ros

namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::cob_srvs::SetMaxVelRequest_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.max_vel);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetMaxVelRequest_
} // namespace serialization
} // namespace ros


namespace ros
{
namespace serialization
{

template<class ContainerAllocator> struct Serializer< ::cob_srvs::SetMaxVelResponse_<ContainerAllocator> >
{
  template<typename Stream, typename T> inline static void allInOne(Stream& stream, T m)
  {
    stream.next(m.success);
    stream.next(m.errorMessage);
  }

  ROS_DECLARE_ALLINONE_SERIALIZER;
}; // struct SetMaxVelResponse_
} // namespace serialization
} // namespace ros

namespace ros
{
namespace service_traits
{
template<>
struct MD5Sum<cob_srvs::SetMaxVel> {
  static const char* value() 
  {
    return "5212ea5f4e683819f4e395ad0eb8ae8c";
  }

  static const char* value(const cob_srvs::SetMaxVel&) { return value(); } 
};

template<>
struct DataType<cob_srvs::SetMaxVel> {
  static const char* value() 
  {
    return "cob_srvs/SetMaxVel";
  }

  static const char* value(const cob_srvs::SetMaxVel&) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<cob_srvs::SetMaxVelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "5212ea5f4e683819f4e395ad0eb8ae8c";
  }

  static const char* value(const cob_srvs::SetMaxVelRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<cob_srvs::SetMaxVelRequest_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_srvs/SetMaxVel";
  }

  static const char* value(const cob_srvs::SetMaxVelRequest_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct MD5Sum<cob_srvs::SetMaxVelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "5212ea5f4e683819f4e395ad0eb8ae8c";
  }

  static const char* value(const cob_srvs::SetMaxVelResponse_<ContainerAllocator> &) { return value(); } 
};

template<class ContainerAllocator>
struct DataType<cob_srvs::SetMaxVelResponse_<ContainerAllocator> > {
  static const char* value() 
  {
    return "cob_srvs/SetMaxVel";
  }

  static const char* value(const cob_srvs::SetMaxVelResponse_<ContainerAllocator> &) { return value(); } 
};

} // namespace service_traits
} // namespace ros

#endif // COB_SRVS_SERVICE_SETMAXVEL_H

